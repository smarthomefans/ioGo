apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId 'de.nisnagel.iogo'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1701
        versionName "0.17.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            applicationIdSuffix ".dev"
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // android support libraries
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:preference-v7:27.1.1'
    implementation 'com.android.support:preference-v14:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    // view model
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'com.google.android.gms:play-services-ads:15.0.1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
    // ROOM
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    // GSON
    implementation 'com.google.code.gson:gson:2.8.2'
    // SOCKET IO
    implementation('io.socket:socket.io-client:0.8.3') {
        exclude group: 'org.json', module: 'json'
    }
    // OTTO BUS
    implementation 'com.squareup:otto:1.3.8'
    // DAGGER
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.14.1'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
    implementation 'com.google.dagger:dagger-android:2.14.1'
    // BUTTERKNIFE
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    // FIREBASE
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-crash:16.0.1'
    // CRASHLYTICS
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    //TIMBER Logging
    implementation 'com.jakewharton.timber:timber:4.5.1'
    // testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply plugin: 'com.google.gms.google-services'
